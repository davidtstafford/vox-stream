name: VoxStream CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [17, 21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: ./mvnw clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests (${{ matrix.os }}, Java ${{ matrix.java }})
        path: '**/target/surefire-reports/TEST-*.xml'
        reporter: java-junit
        
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: ./mvnw clean package -DskipTests
      
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: voxstream-jars
        path: |
          voxstream-frontend/target/*.jar
          voxstream-core/target/*.jar

  # Future: Add macOS DMG and Windows EXE build steps
  # package-macos:
  #   needs: build
  #   runs-on: macos-latest
  #   steps:
  #     - name: Build DMG (placeholder)
  #       run: echo "DMG build will be implemented in future phases"
  
  # package-windows:
  #   needs: build  
  #   runs-on: windows-latest
  #   steps:
  #     - name: Build EXE (placeholder)
  #       run: echo "EXE build will be implemented in future phases"
